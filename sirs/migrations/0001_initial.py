# Generated by Django 3.2.9 on 2021-11-30 11:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='COT',
            fields=[
                ('COID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('COTITLE', models.CharField(max_length=50)),
                ('COTYPE', models.CharField(max_length=6, null=True)),
                ('CREDIT', models.DecimalField(decimal_places=0, max_digits=10, null=True)),
                ('CODEID', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('DEID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('DETITLE', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=12, null=True)),
                ('address', models.CharField(max_length=10, null=True)),
                ('MGRID', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='STT',
            fields=[
                ('STID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('STNAME', models.CharField(max_length=50)),
                ('STLEV', models.CharField(max_length=6, null=True)),
                ('STMJR', models.CharField(max_length=10, null=True)),
                ('STDEID', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PREREQ',
            fields=[
                ('COID', models.ForeignKey(db_column='COID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='sirs.cot')),
                ('PRECOID', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='PRof',
            fields=[
                ('PRID', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('PRNAME', models.CharField(max_length=50)),
                ('RANK', models.CharField(max_length=10)),
                ('Special', models.CharField(max_length=50, null=True)),
                ('DEID', models.ForeignKey(db_column='DEID', null=True, on_delete=django.db.models.deletion.CASCADE, to='sirs.dept')),
            ],
        ),
        migrations.CreateModel(
            name='STCOT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TR', models.DecimalField(decimal_places=0, max_digits=10)),
                ('YRYR', models.CharField(max_length=10)),
                ('Grade', models.DecimalField(decimal_places=1, max_digits=10, null=True)),
                ('COID', models.ForeignKey(db_column='COID', on_delete=django.db.models.deletion.CASCADE, to='sirs.cot')),
                ('STID', models.ForeignKey(db_column='STID', on_delete=django.db.models.deletion.CASCADE, to='sirs.stt')),
            ],
            options={
                'unique_together': {('STID', 'COID')},
            },
        ),
        migrations.CreateModel(
            name='PRCO',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('TR', models.DecimalField(decimal_places=0, max_digits=10)),
                ('YRYR', models.CharField(max_length=10)),
                ('GroupID', models.CharField(max_length=10)),
                ('COID', models.ForeignKey(db_column='COID', on_delete=django.db.models.deletion.CASCADE, to='sirs.cot')),
                ('PRID', models.ForeignKey(db_column='PRID', on_delete=django.db.models.deletion.CASCADE, to='sirs.prof')),
            ],
            options={
                'unique_together': {('COID', 'PRID')},
            },
        ),
    ]
